version: '3.7'

secrets:
  elasticsearch.keystore:
    file: ./secrets/keystore/elasticsearch.keystore
  elasticsearch.service_tokens:
    file: ./secrets/service_tokens
  elastic.ca:
    file: ./secrets/certs/ca/ca.crt
  elasticsearch.certificate:
    file: ./secrets/certs/elasticsearch/elasticsearch.crt
  elasticsearch.key:
    file: ./secrets/certs/elasticsearch/elasticsearch.key
  kibana.certificate:
    file: ./secrets/certs/kibana/kibana.crt
  kibana.key:
    file: ./secrets/certs/kibana/kibana.key
  apm-server.certificate:
    file: ./secrets/certs/apm-server/apm-server.crt
  apm-server.key:
    file: ./secrets/certs/apm-server/apm-server.key

services:
  app1:
    build:
      context: ./Hello-world-app
    networks:
      - app_net

  app2:
    build:
      context: ./Hello-world-app
    networks:
      - app_net

  nginx:
    build:
      context: ./Load-balancer
    ports:
      - "80:80"
    networks:
      - app_net

  fluentd:
    build:
      context: ./log-manager
    networks:
      - app_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=your_my_password
    ports:
      - "9200:9200"
    networks:
      - app_net
    secrets:
      - source: elasticsearch.keystore
        target: /usr/share/elasticsearch/config/elasticsearch.keystore
      - source: elasticsearch.service_tokens
        target: /usr/share/elasticsearch/config/service_tokens
      - source: elastic.ca
        target: /usr/share/elasticsearch/config/certs/ca.crt
      - source: elasticsearch.certificate
        target: /usr/share/elasticsearch/config/certs/elasticsearch.crt
      - source: elasticsearch.key
        target: /usr/share/elasticsearch/config/certs/elasticsearch.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sf --insecure https://$ELASTIC_USERNAME:$ELASTIC_PASSWORD@localhost:$ELASTICSEARCH_PORT/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'"]


  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    environment:
      - ELASTICSEARCH_HOSTS=http://ELASTICSEARCH:9200
    ports:
      - "5601:5601"
    networks:
      - app_net
    env_file:
      - ./secrets/.env.kibana.token
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
      - source: kibana.certificate
        target: /certs/kibana.crt
      - source: kibana.key
        target: /certs/kibana.key  

  apm-server:
    image: elastdocker/apm-server:${ELK_VERSION}
    build:
      context: apm-server/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    ports:
      - "8200:8200"
    volumes:
      - ./apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      ELASTIC_APM_SECRET_TOKEN: ${ELASTIC_APM_SECRET_TOKEN}
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
      - source: apm-server.certificate
        target: /certs/apm-server.crt
      - source: apm-server.key
        target: /certs/apm-server.key    

networks:
  app_net:
    driver: bridge
